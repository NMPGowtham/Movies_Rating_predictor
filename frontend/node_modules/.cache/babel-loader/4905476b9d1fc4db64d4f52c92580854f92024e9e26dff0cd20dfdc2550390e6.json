{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saibh\\\\OneDrive\\\\Desktop\\\\RecMovie\\\\client\\\\src\\\\components\\\\GenreSelector.js\";\nimport React, { useState } from \"react\";\nimport \"../styles/genreSelector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreSelector = ({\n  selectedGenres,\n  setSelectedGenres\n}) => {\n  const allGenres = [\"Action\", \"Comedy\", \"Drama\", \"Horror\", \"Romance\", \"Sci-Fi\", \"Thriller\", \"Animation\", \"Mystery\", \"Adventure\", \"Fantasy\", \"Crime\", \"Music\", \"Family\", \"War\"];\n  const handleGenreClick = genre => {\n    if (!selectedGenres.includes(genre)) {\n      setSelectedGenres([...selectedGenres, genre]);\n    }\n  };\n  const removeGenre = genre => {\n    setSelectedGenres(selectedGenres.filter(g => g !== genre));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Genres:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-genres\",\n      children: selectedGenres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selected-genre\",\n        onClick: () => removeGenre(genre),\n        children: [genre, \" \\u2716\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-genres\",\n      children: allGenres.filter(genre => !selectedGenres.includes(genre)).map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre\",\n        onClick: () => handleGenreClick(genre),\n        children: genre\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = GenreSelector;\nexport default GenreSelector;\nvar _c;\n$RefreshReg$(_c, \"GenreSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GenreSelector","selectedGenres","setSelectedGenres","allGenres","handleGenreClick","genre","includes","removeGenre","filter","g","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/saibh/OneDrive/Desktop/RecMovie/client/src/components/GenreSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/genreSelector.css\";\r\n\r\nconst GenreSelector = ({ selectedGenres, setSelectedGenres }) => {\r\n    const allGenres = [\r\n        \"Action\", \"Comedy\", \"Drama\", \"Horror\", \"Romance\",\r\n        \"Sci-Fi\", \"Thriller\", \"Animation\", \"Mystery\", \"Adventure\",\r\n        \"Fantasy\", \"Crime\", \"Music\", \"Family\", \"War\"\r\n    ];\r\n\r\n    const handleGenreClick = (genre) => {\r\n        if (!selectedGenres.includes(genre)) {\r\n            setSelectedGenres([...selectedGenres, genre]);\r\n        }\r\n    };\r\n\r\n    const removeGenre = (genre) => {\r\n        setSelectedGenres(selectedGenres.filter(g => g !== genre));\r\n    };\r\n\r\n    return (\r\n        <div className=\"genre-container\">\r\n            <h3>Select Genres:</h3>\r\n            <div className=\"selected-genres\">\r\n                {selectedGenres.map((genre, index) => (\r\n                    <span key={index} className=\"selected-genre\" onClick={() => removeGenre(genre)}>\r\n                        {genre} âœ–\r\n                    </span>\r\n                ))}\r\n            </div>\r\n            \r\n            <div className=\"all-genres\">\r\n                {allGenres\r\n                    .filter(genre => !selectedGenres.includes(genre))\r\n                    .map((genre, index) => (\r\n                        <span key={index} className=\"genre\" onClick={() => handleGenreClick(genre)}>\r\n                            {genre}\r\n                        </span>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenreSelector;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAkB,CAAC,KAAK;EAC7D,MAAMC,SAAS,GAAG,CACd,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAChD,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EACzD,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAC/C;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChC,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAC,EAAE;MACjCH,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEI,KAAK,CAAC,CAAC;IACjD;EACJ,CAAC;EAED,MAAME,WAAW,GAAIF,KAAK,IAAK;IAC3BH,iBAAiB,CAACD,cAAc,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,KAAK,CAAC,CAAC;EAC9D,CAAC;EAED,oBACIN,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BV,cAAc,CAACe,GAAG,CAAC,CAACX,KAAK,EAAEY,KAAK,kBAC7BlB,OAAA;QAAkBW,SAAS,EAAC,gBAAgB;QAACQ,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACF,KAAK,CAAE;QAAAM,QAAA,GAC1EN,KAAK,EAAC,SACX;MAAA,GAFWY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENhB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBR,SAAS,CACLK,MAAM,CAACH,KAAK,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAC,CAAC,CAChDW,GAAG,CAAC,CAACX,KAAK,EAAEY,KAAK,kBACdlB,OAAA;QAAkBW,SAAS,EAAC,OAAO;QAACQ,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACC,KAAK,CAAE;QAAAM,QAAA,EACtEN;MAAK,GADCY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACI,EAAA,GAvCInB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}